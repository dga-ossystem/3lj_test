{"version":3,"sources":["reportWebVitals.js","const.js","store/action.js","store/reducer.js","styles.js","components/currSelect.jsx","components/textInput.jsx","components/swapBtn.jsx","components/rateResponseElement.jsx","components/app.jsx","hocs/with-curr-select.js","index.js","api.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Currency","USD","EUR","ILS","CurrType","ActionType","ActionCreator","rates","type","payload","currencies","newCurrencies","amount","status","Operation","baseCurr","dispatch","getState","api","get","response","setTimeout","data","initialState","choosenCurrencies","targetCurr","loadedRates","isFetching","requestTime","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","useStyles","makeStyles","pageWrapper","marginTop","width","widgetCard","display","flexWrap","alignItems","alignContent","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","minHeight","background","borderTop","borderRadius","inputContainer","marginBottom","input","currContainer","rotateAnimation","transform","transition","swapBtn","color","loader","marginLeft","marginRight","CurrSelect","props","classes","values","currType","currName","disabledValue","onValueChange","Select","className","value","onChange","Object","map","i","MenuItem","disabled","TextInput","onAmountChanged","useState","isValid","setIsValid","useSelector","state","useDispatch","TextField","error","helperText","label","event","target","replace","SwapBtn","onBtnClick","IconButton","aria-label","onClick","preventDefault","currentTarget","classList","add","remove","RateResponseElement","targetRate","targetAmount","toFixed","Typography","variant","component","WrappedCurrSelect","Component","WithCurrSelect","_valueChangeHandler","bind","evt","this","setChoosenCurrencies","loadCurrencies","assign","PureComponent","connect","withCurrSelect","App","ThemeProvider","Container","Card","LinearProgress","Date","getTime","keys","length","axios","create","baseURL","timeout","interceptors","use","err","createAPI","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","ReactDOM","render","document","getElementById"],"mappings":"qLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPDQ,EAAW,CACpBC,IAAK,MACLC,IAAK,MACLC,IAAK,OAGIC,EACH,WADGA,EAED,aCNNC,EACU,aADVA,EAEe,kBAFfA,EAGsB,yBAHtBA,EAIU,aAJVA,EAKe,kBAGfC,EACS,SAACC,GAAD,MAAY,CACnBC,KAAMH,EACNI,QAASF,IAHXD,EAMc,SAACI,GAAD,MAAiB,CAC7BF,KAAMH,EACNI,QAASC,IARXJ,EAWoB,SAACK,GAAD,MAAoB,CACtCH,KAAMH,EACNI,QAASE,IAbXL,EAgBS,SAACM,GAAD,MAAa,CACpBJ,KAAMH,EACNI,QAASG,IAlBXN,EAqBa,SAACO,GAAD,MAAa,CACxBL,KAAMH,EACNI,QAASI,IAIXC,EACS,SAACC,GAAD,OAAc,SAACC,EAAUC,EAAUC,GAE1C,OADAF,EAASV,GAA4B,IAC9BY,EAAIC,IAAJ,sBAAuBJ,IACzBrB,MAAK,SAAC0B,GACHC,YAAW,WACPL,EAASV,EAAwBc,EAASE,SDhCjC,UERvBC,EAAe,CACjBC,kBAAmB,CACfZ,OAAQ,GACRG,SAAUf,EAASC,IACnBwB,WAAYzB,EAASE,KAEzBwB,YAAa,GACbC,YAAY,EACZC,YAAa,I,sECTJC,EAAQC,YAAe,CAChCC,QAAS,CACLC,QAAS,CACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAKbC,EAAYC,aAAW,SAACT,GAAD,MAAY,CAC5CU,YAAa,CACTC,UAAW,GACXC,MAAO,KAGXC,WAAY,CACRC,QAAS,OACTC,SAAU,OACVC,WAAY,aACZC,aAAc,aACdC,WAAYlB,EAAMmB,QAAQ,GAC1BC,cAAepB,EAAMmB,QAAQ,GAC7BE,YAAarB,EAAMmB,QAAQ,GAC3BG,aAActB,EAAMmB,QAAQ,GAC5BI,UAAW,IACXC,WAAY,UACZC,UAAW,oBACXC,aAAc,GAGlBC,eAAgB,CACZhB,UAAW,GACXiB,aAAc,GACdhB,MAAO,QAGXiB,MAAO,CACHjB,MAAO,QAGXkB,cAAe,CACXhB,QAAS,OACTE,WAAY,SACZJ,MAAO,QAGXmB,gBAAiB,CACbC,UAAW,kBACXC,WAAY,SAEhBC,QAAS,CACLC,MAAO,WAEXC,OAAQ,CACJxB,MAAO,IACPD,WAAY,GACZ0B,YAAa,GACbC,aAAc,Q,kBCzBPC,EA5BI,SAACC,GAChB,IAAMC,EAAUjC,IACTkC,EAA4DF,EAA5DE,OAAQC,EAAoDH,EAApDG,SAAUC,EAA0CJ,EAA1CI,SAAUC,EAAgCL,EAAhCK,cAAeC,EAAiBN,EAAjBM,cAElD,OACI,cAACC,EAAA,EAAD,CACIC,UAAWP,EAAQZ,MACnBoB,MAAOL,EACPM,SAAUJ,EAHd,SAMQK,OAAOT,OAAOA,GAAQU,KAAI,SAACH,EAAOI,GAC9B,OACI,cAACC,EAAA,EAAD,CAEIL,MAAOA,EACPM,SAAUN,IAAUJ,EAHxB,SAKKI,GALL,UACYN,EADZ,YACwBU,EADxB,YAC6BJ,U,iBCWtCO,EA1BG,SAAChB,GAAW,IACnBiB,EAAmBjB,EAAnBiB,gBACDhB,EAAUjC,IAFS,EAGKkD,oBAAS,GAHd,mBAGlBC,EAHkB,KAGTC,EAHS,KAInB7E,EAAS8E,aAAY,SAAAC,GAAK,OAAIA,EAAMnE,kBAAkBZ,UACtDI,EAAW4E,cASjB,OACI,cAACC,EAAA,EAAD,CACIC,OAAQN,EACRO,YAAaP,GAAW,oCACxBX,UAAWP,EAAQZ,MACnBsC,MAAM,SACNlB,MAAOlE,EACPmE,SAdmB,SAACkB,GACxB,IAAInB,EAAQmB,EAAMC,OAAOpB,MAAMqB,QAAQ,aAAc,OAAOA,QAAQ,sCAAmB,IACvFV,GAAYX,EAAQ,GACpBU,GAAWxE,EAASV,EAAwBwE,IAC5CU,GAAWF,Q,0BCeJc,EA3BC,SAAC/B,GACb,IAAMC,EAAUjC,IACTgE,EAAchC,EAAdgC,WAUP,OACI,cAACC,EAAA,EAAD,CACIC,aAAW,OACX1B,UAAWP,EAAQP,QACnByC,QAAS,SAACP,GAZM,IAACC,EAabD,EAAMQ,kBAbOP,EAcGD,EAAMS,eAbvBC,UAAUC,IAAItC,EAAQV,iBAE7BvC,YAAW,WACP6E,EAAOS,UAAUE,OAAOvC,EAAQV,mBACjC,KAUKyC,KANR,SASI,cAAC,IAAD,O,SCVGS,EAfa,SAACzC,GAAW,IAC7B7C,EAA4B6C,EAA5B7C,kBACDuF,EAD6B1C,EAAT9D,MACDiB,EAAkBC,YACrCuF,GAAgBxF,EAAkBZ,OAASmG,GAAYE,QAAQ,GAErE,OACQ,gCACI,uBACA,cAACC,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,IAA1C,mBACQ5F,EAAkBZ,OAD1B,YACoCY,EAAkBT,SADtD,cACoEiG,EADpE,YACoFxF,EAAkBC,WADtG,aACqHsF,EADrH,W,kDCKVM,GCViB,SAACC,GAAe,IAC7BC,EAD4B,oDAE9B,WAAYlD,GAAQ,IAAD,8BACf,cAAMA,IAEDmD,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAHZ,EAFW,gEAQVC,GAAM,IAAD,EAMjBC,KAAKtD,MAJLG,EAFiB,EAEjBA,SACAhD,EAHiB,EAGjBA,kBACAoG,EAJiB,EAIjBA,qBACAC,EALiB,EAKjBA,eAMJD,EAJsB5C,OAAO8C,OAAO,GAAItG,EAAlBwD,OAAA,IAAAA,CAAA,GACjBR,EAAWkD,EAAIxB,OAAOpB,SAIvBN,IAAapE,GACbyH,EAAeH,EAAIxB,OAAOpB,SArBJ,+BAyBpB,IAAD,EACiC6C,KAAKtD,MAApCG,EADF,EACEA,SAAUhD,EADZ,EACYA,kBACjB,OACI,cAAC8F,EAAD,2BACQK,KAAKtD,OADb,IAEII,SAAUjD,EAAkBgD,GAC5BG,cAAegD,KAAKH,2BA/BF,GACLO,iBAgD7B,OAAOC,aAZiB,SAACrC,GAAD,MAAY,CAChCnE,kBAAmBmE,EAAMnE,sBAGF,SAACR,GAAD,MAAe,CACtC4G,qBADsC,SACjBjH,GACjBK,EAASV,EAAmCK,KAGhDkH,eALsC,SAKvB9G,GAAWC,EAASF,EAAoBC,QAGpDiH,CAA6CT,GDvC9BU,CAAe7D,GAwE1B8D,GArEH,WACR,IAAM5D,EAAUjC,IACVb,EAAoBkE,aAAY,SAAAC,GAAK,OAAIA,EAAMnE,qBAC/CE,EAAcgE,aAAY,SAAAC,GAAK,OAAIA,EAAMjE,YAAYnB,SACrDoB,EAAa+D,aAAY,SAAAC,GAAK,OAAIA,EAAMhE,cACxCC,EAAc8D,aAAY,SAAAC,GAAK,OAAIA,EAAM/D,eACzCZ,EAAW4E,cAYjB,OACI,cAACuC,EAAA,EAAD,CAAetG,MAAOA,EAAtB,SACA,cAACuG,EAAA,EAAD,CAAWvD,UAAWP,EAAQ/B,YAA9B,SAEI,eAAC8F,EAAA,EAAD,CAAMxD,UAAWP,EAAQ5B,WAAzB,UACKf,GAAc,cAAC2G,EAAA,EAAD,CAAgBzD,UAAWP,EAAQL,SAGlD,qBAAKY,UAAWP,EAAQd,eAAxB,SACI,cAAC,EAAD,CACA8B,gBApBC,YACD,IAAIiD,MAAOC,UAChB5G,ERjBU,KQiBkBZ,EAASF,EAAoBU,EAAkBT,gBAsB1E,sBAAK8D,UAAWP,EAAQX,cAAxB,UACI,qBAAKkB,UAAWP,EAAQd,eAAxB,SACI,cAAC6D,GAAD,CACI9C,OAAQvE,EACRwE,SAAUpE,EACVsE,cAAelD,EAAkBC,eAIzC,cAAC,EAAD,CACI4E,WA7BG,WACnBrF,EAASF,EAAoBU,EAAkBC,aAC/CT,EAASV,EAA6BkB,OA8B1B,qBAAKqD,UAAWP,EAAQd,eAAxB,SACI,cAAC6D,GAAD,CACI9C,OAAQvE,EACRwE,SAAUpE,EACVsE,cAAelD,EAAkBT,gBAMxCW,GAAmD,IAApCsD,OAAOyD,KAAK/G,GAAagH,SAAiB/G,GACtD,cAAC,EAAD,CACIH,kBAAmBA,EACnBjB,MAAOmB,YElE7BR,GCTmB,WACrB,IAAMA,EAAMyH,IAAMC,OAAO,CACrBC,QAAS,mCACTC,QAAS,MAmBb,OAFA5H,EAAI6H,aAAa3H,SAAS4H,KAdR,SAAC5H,GACf,OAAOA,KAGI,SAAC6H,GAGZ,GAAwB,MAFLA,EAAZ7H,SAEMP,OACT,MAAMoI,EAGV,MAAMA,KAKH/H,EDbCgI,GAENC,GAAQC,uBRCE,WAAmC,IAAlCzD,EAAiC,uDAAzBpE,EAAc8H,EAAW,uCAC9C,OAAQA,EAAO7I,MACX,KAAKH,EACD,OAAO2E,OAAO8C,OAAO,GAAInC,EAAO,CAC5BjE,YAAa2H,EAAO5I,QACpBkB,YAAY,EACZC,aAAa,IAAI2G,MAAOC,YAGhC,KAAKnI,EACD,OAAO2E,OAAO8C,OAAO,GAAInC,EAAO,CAC5BnE,kBAAmB,CACfZ,OAAQ+E,EAAMnE,kBAAkBZ,OAChCG,SAAUsI,EAAO5I,QAAQgB,WACzBA,WAAY4H,EAAO5I,QAAQM,YAIvC,KAAKV,EACD,OAAO2E,OAAO8C,OAAO,GAAInC,EAAO,CAC5BnE,kBAAmB,CACfZ,OAAQyI,EAAO5I,QAAQG,OACvBG,SAAUsI,EAAO5I,QAAQM,SACzBU,WAAY4H,EAAO5I,QAAQgB,cAIvC,KAAKpB,EACD,OAAO,2BAAKsF,GAAZ,IAAmBnE,kBAAkB,2BAAKmE,EAAMnE,mBAAZ,IAA+BZ,OAAQyI,EAAO5I,YAEtF,KAAKJ,EACD,OAAO,2BAAKsF,GAAZ,IAAmBhE,WAAY0H,EAAO5I,UAE9C,OAAOkF,IQhCP2D,8BACIC,0BAAgBC,IAAMC,kBAAkBvI,OAIhDwI,IAASC,OACL,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJS,SAASC,eAAe,SAM5BtK,M","file":"static/js/main.82674fa7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const Currency = {\n    USD: 'USD',\n    EUR: 'EUR',\n    ILS: 'ILS',\n};\n\nexport const CurrType = {\n    BASE: 'baseCurr',\n    TARGET: 'targetCurr',\n};\n\nexport const REQUEST_DELAY = 1000;\nexport const CACHE_TTL = 10000;\n","import {REQUEST_DELAY} from '../const.js';\r\n\r\nconst ActionType = {\r\n    LOAD_RATES: 'LOAD_RATES',\r\n    SWAP_CURRENCIES: 'SWAP_CURRENCIES',\r\n    SET_CHOOSEN_CURRENCIES: 'SET_CHOOSEN_CURRENCIES',\r\n    SET_AMOUNT: 'SET_AMOUNT',\r\n    SET_IS_FETCHING: 'SET_IS_FETCHING',\r\n};\r\n\r\nconst ActionCreator = {\r\n    loadRates: (rates) => ({\r\n        type: ActionType.LOAD_RATES,\r\n        payload: rates,\r\n    }),\r\n\r\n    swapCurrencies: (currencies) => ({\r\n        type: ActionType.SWAP_CURRENCIES,\r\n        payload: currencies,\r\n    }),\r\n\r\n    setChoosenCurrencies: (newCurrencies) => ({\r\n        type: ActionType.SET_CHOOSEN_CURRENCIES,\r\n        payload: newCurrencies,\r\n    }),\r\n\r\n    setAmount: (amount) => ({\r\n        type: ActionType.SET_AMOUNT,\r\n        payload: amount,\r\n    }),\r\n\r\n    setIsFetching: (status) => ({\r\n        type: ActionType.SET_IS_FETCHING,\r\n        payload: status,\r\n    }),\r\n};\r\n\r\nconst Operation = {\r\n    loadRates: (baseCurr) => (dispatch, getState, api) => {\r\n        dispatch(ActionCreator.setIsFetching(true));\r\n        return api.get(`latest?base=${baseCurr}`)\r\n            .then((response) => {\r\n                setTimeout(() => {\r\n                    dispatch(ActionCreator.loadRates(response.data));\r\n                }, REQUEST_DELAY);\r\n            });\r\n    },\r\n};\r\n\r\n\r\nexport {\r\n    ActionCreator,\r\n    ActionType,\r\n    Operation,\r\n};\r\n","import {Currency} from '../const.js';\r\nimport {ActionType} from \"./action.js\";\r\n\r\nconst initialState = {\r\n    choosenCurrencies: {\r\n        amount: '',\r\n        baseCurr: Currency.USD,\r\n        targetCurr: Currency.EUR,\r\n    },\r\n    loadedRates: [],\r\n    isFetching: false,\r\n    requestTime: '',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionType.LOAD_RATES:\r\n            return Object.assign({}, state, {\r\n                loadedRates: action.payload,\r\n                isFetching: false,\r\n                requestTime: new Date().getTime(),\r\n            });\r\n\r\n        case ActionType.SWAP_CURRENCIES:\r\n            return Object.assign({}, state, {\r\n                choosenCurrencies: {\r\n                    amount: state.choosenCurrencies.amount,\r\n                    baseCurr: action.payload.targetCurr,\r\n                    targetCurr: action.payload.baseCurr,\r\n                },\r\n            });\r\n\r\n        case ActionType.SET_CHOOSEN_CURRENCIES:\r\n            return Object.assign({}, state, {\r\n                choosenCurrencies: {\r\n                    amount: action.payload.amount,\r\n                    baseCurr: action.payload.baseCurr,\r\n                    targetCurr: action.payload.targetCurr,\r\n                },\r\n            });\r\n\r\n        case ActionType.SET_AMOUNT:\r\n            return  {...state, choosenCurrencies: {...state.choosenCurrencies, amount: action.payload}}\r\n\r\n        case ActionType.SET_IS_FETCHING:\r\n            return  {...state, isFetching: action.payload}\r\n    }\r\n    return state;\r\n};\r\n\r\n\r\nexport {reducer};\r\n","import {makeStyles, createMuiTheme} from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#6fc4bc',\n            main: '#4CB6AC',\n            dark: '#357f78',\n            contrastText: '#fff',\n        },\n    },\n});\n\nexport const useStyles = makeStyles((theme) => ({\n    pageWrapper: {\n        marginTop: 20,\n        width: 300,\n    },\n\n    widgetCard: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n        minHeight: 200,\n        background: '#fffcfc',\n        borderTop: '3px solid #000000',\n        borderRadius: 0\n    },\n\n    inputContainer: {\n        marginTop: 10,\n        marginBottom: 10,\n        width: '100%',\n    },\n\n    input: {\n        width: '100%'\n    },\n\n    currContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n    },\n\n    rotateAnimation: {\n        transform: 'rotate(-180deg)',\n        transition: '300ms'\n    },\n    swapBtn: {\n        color: '#4CB6AC',\n    },\n    loader: {\n        width: 280,\n        marginTop: -16,\n        marginLeft: -24,\n        marginRight: -24,\n    },\n}));\n","import React from \"react\";\r\nimport {\r\n    Select,\r\n    MenuItem,\r\n} from '@material-ui/core';\r\nimport {useStyles} from '../styles.js';\r\n\r\n\r\nconst CurrSelect = (props) => {\r\n    const classes = useStyles();\r\n    const {values, currType, currName, disabledValue, onValueChange} = props;\r\n\r\n    return (\r\n        <Select\r\n            className={classes.input}\r\n            value={currName}\r\n            onChange={onValueChange}\r\n        >\r\n            {\r\n                Object.values(values).map((value, i) => {\r\n                    return (\r\n                        <MenuItem\r\n                            key={`${currType}-${i}-${value}`}\r\n                            value={value}\r\n                            disabled={value === disabledValue}\r\n                        >\r\n                            {value}\r\n                        </MenuItem>\r\n                    );\r\n                })\r\n            }\r\n\r\n        </Select>\r\n    );\r\n};\r\n\r\nexport default CurrSelect;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {TextField} from '@material-ui/core';\r\nimport {useStyles} from '../styles.js';\r\nimport {ActionCreator} from \"../store/action\";\r\n\r\n\r\nconst TextInput = (props) => {\r\n    const {onAmountChanged} = props;\r\n    const classes = useStyles();\r\n    const [isValid, setIsValid] = useState(true);\r\n    const amount = useSelector(state => state.choosenCurrencies.amount);\r\n    const dispatch = useDispatch();\r\n\r\n    const inputChangeHandler = (event) => {\r\n        let value = event.target.value.replace(/^0(?=(\\d))/, '$&.').replace(/[a-zA-Zа-яА-Я]/g, '');\r\n        setIsValid(+value > 0);\r\n        isValid && dispatch(ActionCreator.setAmount(value));\r\n        isValid && onAmountChanged();\r\n    };\r\n\r\n    return (\r\n        <TextField\r\n            error={!isValid}\r\n            helperText={!isValid && 'The number must be greater that 0'}\r\n            className={classes.input}\r\n            label='Amount'\r\n            value={amount}\r\n            onChange={inputChangeHandler}\r\n        />\r\n    );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport {IconButton} from '@material-ui/core';\r\nimport {useStyles} from '../styles.js';\r\nimport SwapIcon from '@material-ui/icons/Cached';\r\n\r\n\r\nconst SwapBtn = (props) => {\r\n    const classes = useStyles();\r\n    const {onBtnClick} = props;\r\n\r\n    const animateSwapping = (target) => {\r\n        target.classList.add(classes.rotateAnimation);\r\n\r\n        setTimeout(() => {\r\n            target.classList.remove(classes.rotateAnimation);\r\n        }, 300);\r\n    };\r\n\r\n    return (\r\n        <IconButton\r\n            aria-label=\"swap\"\r\n            className={classes.swapBtn}\r\n            onClick={(event) => {\r\n                event.preventDefault();\r\n                animateSwapping(event.currentTarget);\r\n                onBtnClick();\r\n            }}\r\n        >\r\n            <SwapIcon/>\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport default SwapBtn;\r\n","import React from \"react\";\nimport {Typography} from '@material-ui/core';\n\nconst RateResponseElement = (props) => {\n    const {choosenCurrencies, rates} = props;\n    const targetRate = rates[choosenCurrencies.targetCurr];\n    const targetAmount = (choosenCurrencies.amount * targetRate).toFixed(2);\n\n    return (\n            <div>\n                <hr/>\n                <Typography variant=\"subtitle1\" component=\"p\">\n                    {`${choosenCurrencies.amount} ${choosenCurrencies.baseCurr} = ${targetAmount} ${choosenCurrencies.targetCurr} (${targetRate})`}\n                </Typography>\n            </div>\n    );\n};\n\nexport default RateResponseElement;\n","import React from \"react\";\nimport {useSelector, useDispatch } from 'react-redux'\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport {\n    Container,\n    Card,\n    LinearProgress,\n} from '@material-ui/core';\nimport {Currency, CurrType, CACHE_TTL} from '../const.js';\nimport {useStyles, theme} from '../styles.js';\nimport {ActionCreator, Operation} from \"../store/action.js\";\nimport CurrSelect from \"./currSelect.jsx\";\nimport TextInput from \"./textInput.jsx\";\nimport SwapBtn from \"./swapBtn.jsx\";\nimport RateResponseElement from \"./rateResponseElement.jsx\";\nimport withCurrSelect from \"../hocs/with-curr-select.js\";\nconst WrappedCurrSelect = withCurrSelect(CurrSelect);\n\n\nconst App = () => {\n    const classes = useStyles();\n    const choosenCurrencies = useSelector(state => state.choosenCurrencies);\n    const loadedRates = useSelector(state => state.loadedRates.rates);\n    const isFetching = useSelector(state => state.isFetching);\n    const requestTime = useSelector(state => state.requestTime);\n    const dispatch = useDispatch();\n\n    const getRates = () => {\n        const now = new Date().getTime();\n        (now - requestTime) > CACHE_TTL && dispatch(Operation.loadRates(choosenCurrencies.baseCurr));\n    };\n\n    const swapCurrencies = () => {\n        dispatch(Operation.loadRates(choosenCurrencies.targetCurr));\n        dispatch(ActionCreator.swapCurrencies(choosenCurrencies));\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n        <Container className={classes.pageWrapper}>\n\n            <Card className={classes.widgetCard}>\n                {isFetching && <LinearProgress className={classes.loader} />}\n\n\n                <div className={classes.inputContainer}>\n                    <TextInput\n                    onAmountChanged={getRates}\n                    />\n                </div>\n\n                <div className={classes.currContainer}>\n                    <div className={classes.inputContainer}>\n                        <WrappedCurrSelect\n                            values={Currency}\n                            currType={CurrType.BASE}\n                            disabledValue={choosenCurrencies.targetCurr}\n                        />\n                    </div>\n\n                    <SwapBtn\n                        onBtnClick={swapCurrencies}\n                    />\n\n                    <div className={classes.inputContainer}>\n                        <WrappedCurrSelect\n                            values={Currency}\n                            currType={CurrType.TARGET}\n                            disabledValue={choosenCurrencies.baseCurr}\n                        />\n                    </div>\n                </div>\n\n                {\n                    (loadedRates && Object.keys(loadedRates).length !== 0 && !isFetching) && (\n                        <RateResponseElement\n                            choosenCurrencies={choosenCurrencies}\n                            rates={loadedRates}\n                        />\n                    )\n                }\n\n            </Card>\n        </Container>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import React, {PureComponent} from 'react';\r\n// import PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionCreator, Operation} from \"../store/action.js\";\r\nimport {CurrType} from '../const.js';\r\n\r\nconst withCurrSelect = (Component) => {\r\n    class WithCurrSelect extends PureComponent {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this._valueChangeHandler = this._valueChangeHandler.bind(this);\r\n        }\r\n\r\n        _valueChangeHandler(evt) {\r\n            const {\r\n                currType,\r\n                choosenCurrencies,\r\n                setChoosenCurrencies,\r\n                loadCurrencies,\r\n            } = this.props;\r\n            const newCurrencies = Object.assign({}, choosenCurrencies, {\r\n                [currType]: evt.target.value,\r\n            });\r\n\r\n            setChoosenCurrencies(newCurrencies);\r\n            if (currType === CurrType.BASE) {\r\n                loadCurrencies(evt.target.value);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const {currType, choosenCurrencies} = this.props;\r\n            return (\r\n                <Component\r\n                    {...this.props}\r\n                    currName={choosenCurrencies[currType]}\r\n                    onValueChange={this._valueChangeHandler}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state) => ({\r\n        choosenCurrencies: state.choosenCurrencies,\r\n    });\r\n\r\n    const mapDispatchToProps = (dispatch) => ({\r\n        setChoosenCurrencies(newCurrencies) {\r\n            dispatch(ActionCreator.setChoosenCurrencies(newCurrencies));\r\n        },\r\n\r\n        loadCurrencies(baseCurr) {dispatch(Operation.loadRates(baseCurr))}\r\n    });\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(WithCurrSelect);\r\n};\r\n\r\nexport {withCurrSelect};\r\nexport default withCurrSelect;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reportWebVitals from './reportWebVitals';\nimport {reducer} from \"./store/reducer.js\";\nimport {createAPI} from \"./api.js\";\nimport App from './components/app.jsx';\n\nconst api = createAPI();\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk.withExtraArgument(api))\n    )\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from \"axios\";\n\nexport const createAPI = () => {\n    const api = axios.create({\n        baseURL: 'https://api.exchangeratesapi.io/',\n        timeout: 5000,\n    });\n\n    const onSuccess = (response) => {\n        return response;\n    };\n\n    const onFail = (err) => {\n        const {response} = err;\n\n        if (response.status === 401) {\n            throw err;\n        }\n\n        throw err;\n    };\n\n    api.interceptors.response.use(onSuccess, onFail);\n\n    return api;\n};\n\n"],"sourceRoot":""}